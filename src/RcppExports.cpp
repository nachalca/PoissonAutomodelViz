// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// moran
NumericVector moran(NumericVector y, NumericMatrix NN);
RcppExport SEXP PoissonAutomodelViz_moran(SEXP ySEXP, SEXP NNSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type NN(NNSEXP);
    rcpp_result_gen = Rcpp::wrap(moran(y, NN));
    return rcpp_result_gen;
END_RCPP
}
// sim_mrfC
NumericMatrix sim_mrfC(int meanpar, double bet0, double bet1, double ens, double eew, int R, int iter, NumericVector a, NumericMatrix NN);
RcppExport SEXP PoissonAutomodelViz_sim_mrfC(SEXP meanparSEXP, SEXP bet0SEXP, SEXP bet1SEXP, SEXP ensSEXP, SEXP eewSEXP, SEXP RSEXP, SEXP iterSEXP, SEXP aSEXP, SEXP NNSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type meanpar(meanparSEXP);
    Rcpp::traits::input_parameter< double >::type bet0(bet0SEXP);
    Rcpp::traits::input_parameter< double >::type bet1(bet1SEXP);
    Rcpp::traits::input_parameter< double >::type ens(ensSEXP);
    Rcpp::traits::input_parameter< double >::type eew(eewSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type NN(NNSEXP);
    rcpp_result_gen = Rcpp::wrap(sim_mrfC(meanpar, bet0, bet1, ens, eew, R, iter, a, NN));
    return rcpp_result_gen;
END_RCPP
}
// sim_mrfClog
NumericVector sim_mrfClog(double bet0, double bet1, double ens, double eew, int R, int iter, NumericVector a, NumericMatrix NN);
RcppExport SEXP PoissonAutomodelViz_sim_mrfClog(SEXP bet0SEXP, SEXP bet1SEXP, SEXP ensSEXP, SEXP eewSEXP, SEXP RSEXP, SEXP iterSEXP, SEXP aSEXP, SEXP NNSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type bet0(bet0SEXP);
    Rcpp::traits::input_parameter< double >::type bet1(bet1SEXP);
    Rcpp::traits::input_parameter< double >::type ens(ensSEXP);
    Rcpp::traits::input_parameter< double >::type eew(eewSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type NN(NNSEXP);
    rcpp_result_gen = Rcpp::wrap(sim_mrfClog(bet0, bet1, ens, eew, R, iter, a, NN));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"PoissonAutomodelViz_moran", (DL_FUNC) &PoissonAutomodelViz_moran, 2},
    {"PoissonAutomodelViz_sim_mrfC", (DL_FUNC) &PoissonAutomodelViz_sim_mrfC, 9},
    {"PoissonAutomodelViz_sim_mrfClog", (DL_FUNC) &PoissonAutomodelViz_sim_mrfClog, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_PoissonAutomodelViz(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
